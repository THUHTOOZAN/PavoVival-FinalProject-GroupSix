rules_version = '2';
service cloud.firestore {
  match /databases/{db}/documents {

    // --- USERS ---------------------------------------------------------
    // Publicly readable profiles. Only the owner can write their own doc.
    match /users/{uid} {
      allow read: if true;
      allow create, update, delete: if request.auth != null && request.auth.uid == uid;

      // Optional subcollection to index the owner's post IDs
      match /posts/{postId} {
        allow read, write: if request.auth != null && request.auth.uid == uid;
      }
    }

    // --- CHATS ---------------------------------------------------------
    // Chat document must contain "members" = [uid1, uid2, ...]
    match /chats/{chatId} {
      allow read, write:
        if request.auth != null &&
           request.resource.data.members is list &&
           request.auth.uid in request.resource.data.members;

      // Messages subcollection inside a chat
      match /messages/{msgId} {
        allow read, write:
          if request.auth != null &&
             // Check membership against the parent chat doc
             request.auth.uid in get(/databases/$(db)/documents/chats/$(chatId)).data.members;
      }
    }

    // --- POSTS ---------------------------------------------------------
    // Global feed: anyone can read. Only the owner can create/update/delete.
    match /posts/{postId} {
      allow read: if true;

      // Create: uid in payload must equal the caller's uid
      allow create:
        if request.auth != null &&
           request.resource.data.uid == request.auth.uid;

      // Update/Delete: only original author
      allow update, delete:
        if request.auth != null &&
           resource.data.uid == request.auth.uid;
    }
  }
  }



rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {

    // --- PROFILE AVATARS ----------------------------------------------
    // Stored at: profile/{uid}/avatar.jpg
    match /profile/{uid}/{fileName} {
      allow read: if true; // avatars are public
      allow write: if request.auth != null && request.auth.uid == uid;
    }

    // --- CHAT IMAGES ---------------------------------------------------
    // Stored at: chats/{chatId}/{uid}/{filename}
    // Allow write only for signed-in users uploading to their own uid folder.
    match /chats/{chatId}/{uid}/{fileName} {
      allow read: if true;
      allow write:
        if request.auth != null && request.auth.uid == uid;
      // (Optional) To also verify the user is a chat member, uncomment:
      // && request.auth.uid in
      //   get(/databases/(default)/documents/chats/$(chatId)).data.members;
    }

    // --- POST IMAGES ---------------------------------------------------
    // Stored at: posts/{uid}/{filename}
    match /posts/{uid}/{filePath=**} {
      allow read: if true;  // public images
      allow write: if request.auth != null && request.auth.uid == uid;
    }
  }
}
