// src/services/postApi.js
import { db, storage } from "../firebase";
import {
  addDoc,
  collection,
  getDocs,
  orderBy,
  query,
  serverTimestamp,
  where,
} from "firebase/firestore";
import { getDownloadURL, ref as sref, uploadBytes } from "firebase/storage";

// Create a post (text and/or image). Returns the new post id.
export async function createPost({ uid, text, file, authorName, authorPhoto }) {
  let imageUrl = "";

  if (file) {
    const path = `posts/${uid}/${Date.now()}_${file.name}`;
    const r = sref(storage, path);
    await uploadBytes(r, file);
    imageUrl = await getDownloadURL(r);
  }

  const docRef = await addDoc(collection(db, "posts"), {
    authorId: uid,
    authorName: authorName || "",
    authorPhoto: authorPhoto || "",
    text: text || "",
    imageUrl,
    createdAt: serverTimestamp(),
    likes: 0,
    commentsCount: 0,
  });

  return docRef.id;
}

// Posts for a user (newest first)
export async function getUserPosts(uid) {
  const q = query(
    collection(db, "posts"),
    where("authorId", "==", uid),
    orderBy("createdAt", "desc")
  );
  const snap = await getDocs(q);
  return snap.docs.map((d) => ({ id: d.id, ...d.data() }));
}

// Public feed (everyone; newest first)
export async function getFeed(limitCount = 50) {
  const q = query(collection(db, "posts"), orderBy("createdAt", "desc"));
  const snap = await getDocs(q);
  return snap.docs.map((d) => ({ id: d.id, ...d.data() }));
}